# rubyのメモ

- rubyはオブジェクト指向言語

- rubyを扱うファイルの拡張子
  - ~~~~.rb
- rubyのファイルを実行する
  - ruby ファイル名
  
  
- 基礎文法
  - メソッドの呼び出し
    ```
    オブジェクト.メソッド(引数1, 引数2)
    引数はカッコなしでも良い
    オブジェクト.メソッド 引数1, 引数2
    ```
  - 文の区切り
    - 改行
    - 文の最後に;を付ける
    - \を付けると改行をしてても文が続いていることになる
  - コメント
    - 文の最初に#を付ける
  
  - 変数
    - 宣言と代入
      ```
      変数名 = 値や式
      
      変数名は下記のように小文字のスネークケース(アンダーバーで単語を区切ること)
      使えるのはアルファベットの小文字とアンダーバー、数字
      test_dayo123 = 1
      
      下記のように変数をまとめて宣言、代入することも出来る
      irb(main):001:0> a, b = 1, 2
      irb(main):002:0> a
      => 1
      irb(main):003:0> b
      => 2
      
      代入する値が少ない場合はnilが入る
      irb(main):004:0> a, b = 1
      irb(main):005:0> a
      => 1
      irb(main):006:0> b
      => nil
      ```
   - 文字列
     ```
     シングルもしくはダブルクフォートで囲う
     'test'
     "test"
     
     特殊文字を使う場合はダブルクフォート
     "test\ntest"
     ```
     - 式展開
       ```
       文字列に式の値を与えることが出来る
       irb(main):007:0> a = 'aaaa'
        irb(main):008:0> "bbbb#{a}bbbbb"
        => "bbbbaaaabbbbb"
       ```
     - 文字の連結
      ```
      irb(main):009:0> 'bbbbb' + a
      => "bbbbbaaaa"
      ```
   - 数値
    ```
    基本、少数、負の数
    irb(main):010:0> 1
    => 1
    irb(main):011:0> 100
    => 100
    irb(main):012:0> -100
    => -100
    irb(main):013:0> 1.5
    => 1.5
    irb(main):014:0> -0.5
    => -0.5
    アンダーバーもいれることが出来るが無視される
    irb(main):015:0> 1_0_0
    => 100
    四則演算
    irb(main):016:0> 1 + 1
    => 2
    irb(main):017:0> 2 - 1
    => 1
    irb(main):019:0> 2 * 2
    => 4
    irb(main):020:0> 4 / 2
    => 2
    変数の前に-を付けると負の数に出来る
    irb(main):021:0> a = 1
    irb(main):022:0> -a
    => -1
    ```
 

- コマンド
  - ruby -v
    - バージョンの確認

  - irb
    - rubyをコマンドラインで使用出来る
  
- その他
  - リテラル
    - ソースコードに直接記載する数字や文字列のこと
  - 識別子
    - 変数やメソッド、クラス等に名前をつけることを識別子を言う
  - 予約語
    - 言語ごとに予め設定されている識別子、基本的には予約語は識別子として使えない
  - 特殊文字
    - \n 改行
    - \r キャリッジリターン(改行+行の先頭に移動)
    - \t タブ
